{"version":3,"file":"static/js/148.8e646b5d.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/BackLink/BackLink.jsx","pages/MovieDetails.styled.js","pages/MovieDetails.jsx","services/fetch-trending-movie.js"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n    return (\n        <ThreeDots \nheight=\"80\" \nwidth=\"80\" \nradius=\"9\"\ncolor=\"#000000\" \nariaLabel=\"three-dots-loading\"\nwrapperStyle={{}}\nwrapperClassName=\"\"\nvisible={true}\n />\n    )\n};\n\nexport default Loader;","import { HiArrowLeft } from \"react-icons/hi\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nconst BackLink = ({ to, children }) => {\n  \n  return (\n    <Link to={to}>\n      <HiArrowLeft size=\"22\" />\n      {children}\n    </Link>\n  );\n};\n\nexport default BackLink;\n\n\nBackLink.propTypes = {\n  to: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\npadding: 18px;\n`;\n\nexport const Image = styled.img`\n display: block;\n    width: 300px;\n    object-fit: contain;\n    float: left;\n    margin-right: 10px;\n    margin-bottom: 20px;\n`;\n\nexport const TitleAndOther = styled.div`\ndisplay: flex;\nflex-wrap: wrap;\nflex-direction: column;\n`;\n\nexport const Title = styled.h1`\nmargin: 0px 0px 15px;\n`;\n\nexport const Owerview = styled.h2`\nmargin: 0px;\n`;\n\nexport const Genres = styled.h3`\nmargin: 0px;\n`;\n\nexport const GenresList = styled.ul`\ndisplay: flex;\n`;\n\nexport const GenresItem = styled.li`\nmargin-right: 8px;\nborder: 0.5px solid lightgray;\npadding: 5px;\nborder-radius: 3px;\n`;\n\nexport const Info = styled.ul`\nmargin: 85px 5px;\n`;\n\nexport const InfoTitle= styled.h3`\nmargin-bottom: 5px;\n`;\n\n\n","import { useLocation, useParams, Link, Outlet } from \"react-router-dom\";\nimport { useEffect, useState, useRef } from \"react\";\nimport apiTheMovie from \"../services/fetch-trending-movie\";\nimport BackLink from \"components/BackLink/BackLink\";\nimport Loader from \"components/Loader/Loader\";\nimport { Wrapper, TitleAndOther, Title, Owerview, Genres, Info, GenresList, GenresItem, InfoTitle, Image } from \"./MovieDetails.styled\";\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [movieDetails, setMovieDetails] = useState({});\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState('');\n    const location = useLocation();\n    const backLinkLocationRef = useRef(location.state?.from ?? \"/\");\n    \n\n    useEffect(() => {\n        setIsLoading(true);\n        apiTheMovie.fetchMovieDetails(movieId)\n            .then(data => {\n            setMovieDetails(data);\n        }).catch(error => {\n        setError(error);\n        setIsLoading(false);\n      }).finally(() => {\n        setIsLoading(false)\n      })\n    }, [movieId]);\n     \n\n    const fixedScore = (movieDetails.vote_average * 10).toFixed(0);\n\n    return (<Wrapper>\n        <BackLink to={backLinkLocationRef.current}>Go back</BackLink>\n        {!error && movieDetails ? <div>\n            <Image src={`https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`} alt=\"poster\"  />\n            <TitleAndOther>\n        <Title>{movieDetails.original_title}({movieDetails.release_date ? movieDetails.release_date.slice(0, -6): ''})</Title>\n        <p>User score: {fixedScore} %</p>\n        <Owerview>Owerview</Owerview>\n        <p>{movieDetails.overview}</p>\n        <Genres>Genres</Genres>\n        <GenresList>\n            {movieDetails.genres &&\n                movieDetails.genres.map(({ name, id }) => (\n                      <GenresItem key={id}>{name}</GenresItem>\n                    ))}\n                </GenresList>\n                </TitleAndOther>\n             </div> : (<p>We don't have any information for this movie</p>\n        )}\n        {isLoading && <Loader />}\n        <Info><InfoTitle> Additional information</InfoTitle>\n            <li>\n                <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n                <Link to=\"reviews\">Reviews</Link>\n            </li>\n        </Info>\n        <Outlet/>\n    </Wrapper>)\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = `https://api.themoviedb.org/3/`;\nconst API_KEY = `1633536a0456347d61753bdcd242ef29`;\n\n \nconst fetchTrending = () => axios\n    .get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.data.results);\n\nconst fetchSearchMovies = (query) => axios\n    .get(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1`)\n    .then(response => response.data.results);\n\nconst fetchMovieDetails = (id) => axios\n    .get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`)\n    .then(response => response.data);\n    \nconst fetchMovieCredits = (id) => axios\n    .get(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`)\n    .then(response => response.data.cast);    \n\nconst fetchMovieReviews = (id) => axios\n    .get(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`)\n    .then(response => response.data.results);\n\nconst apiTheMovie = {\n    fetchTrending,\n    fetchSearchMovies,\n    fetchMovieDetails,\n    fetchMovieCredits,\n    fetchMovieReviews\n};\n\nexport default apiTheMovie;"],"names":["height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","to","children","size","Wrapper","styled","Image","TitleAndOther","Title","Owerview","Genres","GenresList","GenresItem","Info","InfoTitle","movieId","useParams","useState","movieDetails","setMovieDetails","isLoading","setIsLoading","error","setError","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","apiTheMovie","then","data","catch","finally","fixedScore","vote_average","toFixed","current","src","poster_path","alt","original_title","release_date","slice","overview","genres","map","name","id","Loader","BASE_URL","API_KEY","fetchTrending","axios","response","results","fetchSearchMovies","query","fetchMovieDetails","fetchMovieCredits","cast","fetchMovieReviews"],"sourceRoot":""}