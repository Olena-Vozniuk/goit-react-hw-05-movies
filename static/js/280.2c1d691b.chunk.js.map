{"version":3,"file":"static/js/280.2c1d691b.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","../node_modules/nanoid/index.browser.js","pages/movies.styled.js","pages/Movies.jsx","services/fetch-trending-movie.js"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n    return (\n        <ThreeDots \nheight=\"80\" \nwidth=\"80\" \nradius=\"9\"\ncolor=\"#000000\" \nariaLabel=\"three-dots-loading\"\nwrapperStyle={{}}\nwrapperClassName=\"\"\nvisible={true}\n />\n    )\n};\n\nexport default Loader;","import styled from 'styled-components';\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\ngap: 5px;\n`;\n\nexport const Item = styled.li`\nwidth: 100px;\n`;\n","import { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid'\nimport { List, Item } from \"./MoviesList.styled\";\n\nconst MoviesList = ({ movies }) => {\n    const location = useLocation();\n    return (\n        <List>\n            {movies &&\n                movies.map(({ title, id, release_date, poster_path }) => (\n                    <Link key={nanoid()} to={`/movies/${id}`} state={{ from: location }}>\n                        <img src={`https://image.tmdb.org/t/p/w500/${poster_path}`} alt=\"poster\" width={100}/>\n                        <Item>{title} ({release_date.slice(0, -6)})</Item>\n                        </Link>\n                    ))}\n        </List>\n        );\n   \n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        title: PropTypes.string.isRequired,\n        release_date: PropTypes.string.isRequired,\n        poster_path: PropTypes.string,\n    })\n  ),\n};","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\npadding: 16px;\n`;\n","import { useState, useEffect } from \"react\";\nimport { useSearchParams } from 'react-router-dom';\nimport apiTheMovie from \"../services/fetch-trending-movie\";\nimport MoviesList from \"components/MoviesList/MoviesList\";\nimport Loader from \"components/Loader/Loader\";\nimport { Wrapper } from \"./movies.styled\";\n\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get(\"query\") ?? \"\";\n;\n\n    useEffect(() => {\n        apiTheMovie.fetchSearchMovies(query)\n            .then(newMovies => {\n                if (query !== '' && newMovies.length === 0) {\n                    setError(\"We don't have any reviews for this movie\");\n                    setMovies();\n                }\n                else {\n                    setMovies(prevMovies => [...prevMovies, ...newMovies]);\n                }    \n            })\n            .catch(error => {\n                setError(error);\n                setIsLoading(false);\n            }).finally(() => {\n                setIsLoading(false)\n            })\n        apiTheMovie.fetchSearchMovies();\n        setError(\"\");\n    }, [query]);\n\n    const handleFormSubmit = (e) => {\n        e.preventDefault();\n        const query = e.target.elements.query.value;\n       \n        if (query.trim() === '') return setSearchParams({});\n        setSearchParams({ query });\n        \n    };   \n    \n    return (<Wrapper>\n        <form onSubmit={handleFormSubmit}>\n        <input type=\"text\" name=\"query\" />\n        <button type=\"submit\">Search</button>\n        </form>\n        <MoviesList movies={movies}  />\n        {isLoading && <Loader />}\n        {error && <p> {error}</p>}\n    </Wrapper>\n    )\n};\n\nexport default Movies;\n\n","import axios from 'axios';\n\nconst BASE_URL = `https://api.themoviedb.org/3/`;\nconst API_KEY = `1633536a0456347d61753bdcd242ef29`;\n\n \nconst fetchTrending = () => axios\n    .get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.data.results);\n\nconst fetchSearchMovies = (query) => axios\n    .get(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1`)\n    .then(response => response.data.results);\n\nconst fetchMovieDetails = (id) => axios\n    .get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`)\n    .then(response => response.data);\n    \nconst fetchMovieCredits = (id) => axios\n    .get(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`)\n    .then(response => response.data.cast);    \n\nconst fetchMovieReviews = (id) => axios\n    .get(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`)\n    .then(response => response.data.results);\n\nconst apiTheMovie = {\n    fetchTrending,\n    fetchSearchMovies,\n    fetchMovieDetails,\n    fetchMovieCredits,\n    fetchMovieReviews\n};\n\nexport default apiTheMovie;"],"names":["height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","List","styled","Item","movies","location","useLocation","map","title","id","release_date","poster_path","to","state","from","src","alt","slice","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","Wrapper","useState","setMovies","error","setError","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","query","get","useEffect","apiTheMovie","then","newMovies","length","prevMovies","catch","finally","onSubmit","e","preventDefault","target","elements","value","trim","type","name","Loader","BASE_URL","API_KEY","fetchTrending","axios","response","data","results","fetchSearchMovies","fetchMovieDetails","fetchMovieCredits","cast","fetchMovieReviews"],"sourceRoot":""}