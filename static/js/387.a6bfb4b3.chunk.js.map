{"version":3,"file":"static/js/387.a6bfb4b3.chunk.js","mappings":"4PAEaA,EAAcC,EAAAA,GAAAA,IAAH,gFAMXC,EAAQD,EAAAA,GAAAA,IAAH,uCAILE,EAAOF,EAAAA,GAAAA,GAAH,uC,SC6BjB,EAnCa,WACT,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACNH,GAAa,GACbI,EAAAA,EAAAA,kBAA8BV,GACzBW,MAAK,SAAAC,GACNR,EAAQQ,EACX,IAAEC,OAAM,SAAAN,GACTC,EAASD,GACTD,GAAa,EACd,IAAEQ,SAAQ,WACTR,GAAa,EACd,GACF,GAAE,CAACN,KAIG,UAACJ,EAAD,YACDW,GAASJ,EAAKY,OAAS,EAAKZ,EAAKa,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAIC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACpC,UAACrB,EAAD,YACI,SAACD,EAAD,CAAOuB,IAAG,0CAAqCD,GAAgBE,IAAI,WACnE,uBAAIL,KACP,uBAAIE,MAHMD,EADyB,KAMjC,iEAELX,IAAS,cAAGgB,MAAM,SAAT,0CACTlB,IAAa,SAACmB,EAAA,EAAD,MAErB,C,4CCtBD,IAfe,WACX,OACI,SAAC,KAAD,CACRC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,GAGR,C,mCCbKC,EAAQ,gCACRC,EAAO,mCAuBPxB,EAAc,CAChByB,cArBkB,kBAAMC,EAAAA,EAAAA,IAAA,UAChBH,EADgB,sCACsBC,IAC7CvB,MAAK,SAAA0B,GAAQ,OAAIA,EAASzB,KAAK0B,OAAlB,GAFI,EAsBlBC,kBAlBsB,SAACC,GAAD,OAAWJ,EAAAA,EAAAA,IAAA,UACzBH,EADyB,gCACOC,EADP,kBACwBM,EADxB,YAEhC7B,MAAK,SAAA0B,GAAQ,OAAIA,EAASzB,KAAK0B,OAAlB,GAFQ,EAmBtBG,kBAfsB,SAACvB,GAAD,OAAQkB,EAAAA,EAAAA,IAAA,UACtBH,EADsB,iBACLf,EADK,oBACSgB,IACtCvB,MAAK,SAAA0B,GAAQ,OAAIA,EAASzB,IAAb,GAFQ,EAgBtB8B,kBAZsB,SAACxB,GAAD,OAAQkB,EAAAA,EAAAA,IAAA,UACtBH,EADsB,iBACLf,EADK,4BACiBgB,IAC9CvB,MAAK,SAAA0B,GAAQ,OAAIA,EAASzB,KAAKT,IAAlB,GAFQ,EAatBwC,kBATsB,SAACzB,GAAD,OAAQkB,EAAAA,EAAAA,IAAA,UACtBH,EADsB,iBACLf,EADK,4BACiBgB,IAC9CvB,MAAK,SAAA0B,GAAQ,OAAIA,EAASzB,KAAK0B,OAAlB,GAFQ,GAY1B,K","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Loader/Loader.jsx","services/fetch-trending-movie.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastWrapper = styled.div`\ndisplay: flex;\nflex-wrap: wrap;\nalign-items: center;\n`;\n\nexport const Image = styled.img`\nwidth: 100px;\n`;\n\nexport const Item = styled.li`\nwidth: 130px;\n`;","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport apiTheMovie from \"../../services/fetch-trending-movie\";\nimport Loader from \"components/Loader/Loader\";\nimport { CastWrapper, Image, Item } from \"./Cast.styled\"\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState('');\n    \n    useEffect(() => {\n        setIsLoading(true);\n        apiTheMovie.fetchMovieCredits(movieId)\n            .then(data => {\n            setCast(data);\n        }).catch(error => {\n        setError(error);\n        setIsLoading(false);\n      }).finally(() => {\n        setIsLoading(false)\n      })\n    }, [movieId]);\n\n    \n\n    return <CastWrapper>\n       { !error && cast.length > 0 ? (cast.map(({ name, id, character, profile_path }) => (\n           <Item key={id}>\n               <Image src={`https://image.tmdb.org/t/p/w500/${profile_path}`} alt=\"actor\" />\n               <p>{name}</p>\n            <p>{character}</p>   \n           </Item>\n       ))) : (<p>We don't have any cast for this movie</p>\n        )}\n        {error && <p align=\"center\">Sorry, something went wrong\"</p>}\n        {isLoading && <Loader />}\n    </CastWrapper>\n}\n\nexport default Cast;\n\n// http://localhost:3000/goit-react-hw-05-movies/movies/776835/cast","import { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n    return (\n        <ThreeDots \nheight=\"80\" \nwidth=\"80\" \nradius=\"9\"\ncolor=\"#000000\" \nariaLabel=\"three-dots-loading\"\nwrapperStyle={{}}\nwrapperClassName=\"\"\nvisible={true}\n />\n    )\n};\n\nexport default Loader;","import axios from 'axios';\n\nconst BASE_URL = `https://api.themoviedb.org/3/`;\nconst API_KEY = `1633536a0456347d61753bdcd242ef29`;\n\n \nconst fetchTrending = () => axios\n    .get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.data.results);\n\nconst fetchSearchMovies = (query) => axios\n    .get(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1`)\n    .then(response => response.data.results);\n\nconst fetchMovieDetails = (id) => axios\n    .get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`)\n    .then(response => response.data);\n    \nconst fetchMovieCredits = (id) => axios\n    .get(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`)\n    .then(response => response.data.cast);    \n\nconst fetchMovieReviews = (id) => axios\n    .get(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`)\n    .then(response => response.data.results);\n\nconst apiTheMovie = {\n    fetchTrending,\n    fetchSearchMovies,\n    fetchMovieDetails,\n    fetchMovieCredits,\n    fetchMovieReviews\n};\n\nexport default apiTheMovie;"],"names":["CastWrapper","styled","Image","Item","movieId","useParams","useState","cast","setCast","isLoading","setIsLoading","error","setError","useEffect","apiTheMovie","then","data","catch","finally","length","map","name","id","character","profile_path","src","alt","align","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","BASE_URL","API_KEY","fetchTrending","axios","response","results","fetchSearchMovies","query","fetchMovieDetails","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}