{"version":3,"file":"static/js/967.f3dab4b1.chunk.js","mappings":"2PAEaA,EAAUC,EAAAA,GAAAA,IAAH,kGAOPC,EAAOD,EAAAA,GAAAA,GAAH,uRAcJE,EAAOF,EAAAA,GAAAA,GAAH,gF,SCEjB,EArBqB,SAAC,GAAgB,IAAdG,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OAAQ,UAACN,EAAD,YACJ,4CACA,SAACG,EAAD,UACKC,EAAOG,KAAI,YAA8C,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,GAAIC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,YACpC,OACI,SAAC,KAAD,CAAeC,GAAE,kBAAaH,GAAMI,MAAO,CAACC,KAAMT,GAAlD,UACI,UAACH,EAAD,YACI,gBAAKa,IAAG,0CAAqCJ,GAAeK,IAAI,SAASC,MAAM,SAC/E,yBAAIT,EAAJ,KAAaE,EAAaQ,MAAM,GAAI,GAApC,WAHGT,EAOlB,QAIZ,ECJD,EAfa,WACT,OAA4BU,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAegB,EAAf,KASA,OAPAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,EAAAA,gBAA4BC,MAAK,SAAAnB,GAC7BgB,EAAUhB,EACb,IAAEoB,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,EAAlB,GACjB,GAAE,KAGK,2BACJ,SAAC,EAAD,CAAcrB,OAASA,KAE9B,C,mCCfKuB,EAAQ,gCACRC,EAAO,mCAuBPN,EAAc,CAChBO,cArBkB,kBAAMC,EAAAA,EAAAA,IAAA,UAChBH,EADgB,sCACsBC,IAC7CL,MAAK,SAAAQ,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,GAFI,EAsBlBC,kBAlBsB,SAACC,GAAD,OAAWL,EAAAA,EAAAA,IAAA,UACzBH,EADyB,gCACOC,EADP,kBACwBO,EADxB,YAEhCZ,MAAK,SAAAQ,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,GAFQ,EAmBtBG,kBAfsB,SAAC3B,GAAD,OAAQqB,EAAAA,EAAAA,IAAA,UACtBH,EADsB,iBACLlB,EADK,oBACSmB,IACtCL,MAAK,SAAAQ,GAAQ,OAAIA,EAASC,IAAb,GAFQ,EAgBtBK,kBAZsB,SAAC5B,GAAD,OAAQqB,EAAAA,EAAAA,IAAA,UACtBH,EADsB,iBACLlB,EADK,4BACiBmB,IAC9CL,MAAK,SAAAQ,GAAQ,OAAIA,EAASC,KAAKM,IAAlB,GAFQ,EAatBC,kBATsB,SAAC9B,GAAD,OAAQqB,EAAAA,EAAAA,IAAA,UACtBH,EADsB,iBACLlB,EADK,4BACiBmB,IAC9CL,MAAK,SAAAQ,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,GAFQ,GAY1B,K","sources":["components/trendingList/trendingList.styled.js","components/trendingList/trendingList.jsx","pages/Home.jsx","services/fetch-trending-movie.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\ntext-align: center;\nimg{ display: block};\npadding: 18px;\nwidth: 100%;\n`;\n\nexport const Item = styled.li`\npadding: 10px 5px 5px 5px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\ntext-align: center;\nmargin: 5px;\nwidth: 200px;\nheight: 300px;\nbackground-color: whitesmoke;\nborder-radius: 2px;\nbox-shadow: 0px 0px 3px 1px rgba(0,0,0,0.4);\n`;\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\nalign-items: center;\n`;","import { Link, useLocation } from \"react-router-dom\";\nimport { Wrapper, Item, List } from \"./trendingList.styled\";\n\n\nconst TrendingList = ({ movies }) => {\n    const location = useLocation();\n\n    return (<Wrapper>\n        <h2>Trending today</h2>\n        <List>\n            {movies.map(({ title, id, release_date, poster_path })=> {\n                return (\n                    <Link key={id} to={`/movies/${id}`} state={{from: location}}>\n                        <Item>\n                            <img src={`https://image.tmdb.org/t/p/w500/${poster_path}`} alt=\"poster\" width=\"140\" />\n                            <p>{title} ({release_date.slice(0, -6)})</p>\n                        </Item>\n                    </Link>\n                )\n            })}\n        </List>\n    </Wrapper>);\n   \n};\n\nexport default TrendingList;","import { useEffect, useState } from \"react\";\nimport apiTheMovie from '../services/fetch-trending-movie';\nimport TrendingList from \"../components/trendingList/trendingList\";\n\nconst Home = () => {\n    const [movies, setMovies] = useState([]);\n    \n    useEffect(() => {\n        apiTheMovie.fetchTrending().then(movies => {\n            setMovies(movies);\n        }).catch(error => console.error(error));\n    }, []);\n\n \n    return (<main>\n        <TrendingList movies= {movies} />\n        </main>)\n}\n\nexport default Home;","import axios from 'axios';\n\nconst BASE_URL = `https://api.themoviedb.org/3/`;\nconst API_KEY = `1633536a0456347d61753bdcd242ef29`;\n\n \nconst fetchTrending = () => axios\n    .get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.data.results);\n\nconst fetchSearchMovies = (query) => axios\n    .get(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1`)\n    .then(response => response.data.results);\n\nconst fetchMovieDetails = (id) => axios\n    .get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`)\n    .then(response => response.data);\n    \nconst fetchMovieCredits = (id) => axios\n    .get(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`)\n    .then(response => response.data.cast);    \n\nconst fetchMovieReviews = (id) => axios\n    .get(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`)\n    .then(response => response.data.results);\n\nconst apiTheMovie = {\n    fetchTrending,\n    fetchSearchMovies,\n    fetchMovieDetails,\n    fetchMovieCredits,\n    fetchMovieReviews\n};\n\nexport default apiTheMovie;"],"names":["Wrapper","styled","Item","List","movies","location","useLocation","map","title","id","release_date","poster_path","to","state","from","src","alt","width","slice","useState","setMovies","useEffect","apiTheMovie","then","catch","error","console","BASE_URL","API_KEY","fetchTrending","axios","response","data","results","fetchSearchMovies","query","fetchMovieDetails","fetchMovieCredits","cast","fetchMovieReviews"],"sourceRoot":""}