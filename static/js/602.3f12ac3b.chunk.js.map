{"version":3,"file":"static/js/602.3f12ac3b.chunk.js","mappings":"4JAiBA,IAfe,WACX,OACI,SAAC,KAAD,CACRA,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,GAGR,C,oJCbYC,EAAOC,EAAAA,GAAAA,GAAH,qEAMJC,EAAOD,EAAAA,GAAAA,GAAH,uC,SCWjB,EAhBmB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OACZC,GAAWC,EAAAA,EAAAA,MACjB,OACI,SAACL,EAAD,UACKG,GACGA,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAIC,EAAd,EAAcA,aAAcC,EAA5B,EAA4BA,YAA5B,OACP,UAAC,KAAD,CAAeC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMT,GAAnD,WACI,gBAAKU,IAAG,0CAAqCJ,GAAeK,IAAI,SAAStB,MAAO,OAChF,UAACS,EAAD,WAAOK,EAAP,KAAgBE,EAAaO,MAAM,GAAI,GAAvC,SAFOR,EADJ,KAS1B,E,SCfYS,EAAUhB,EAAAA,GAAAA,IAAH,wCCwDpB,EAlDe,WAAO,IAAD,EACjB,GAA4BiB,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAegB,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAiC3C,OAAQ,UAACX,EAAD,YACJ,kBAAOY,KAAK,OACRC,MAAOH,EACPI,SARY,SAACC,GACrB,IAAMC,EAAkC,KAArBD,EAAIE,OAAOJ,MAAe,CAAEH,MAAOK,EAAIE,OAAOJ,OAAU,CAAC,EAC5EJ,EAAgBO,EACf,KAMG,mBAAQJ,KAAK,SAASM,QA9BD,SAACH,GAEtBA,EAAII,iBACHC,EAAAA,EAAAA,kBAA8BV,GAC1BW,MAAK,SAAAC,GACuB,IAArBA,EAAUC,OACVnB,EAAS,4CAETF,GAAU,SAAAsB,GAAU,wBAAQA,IAAR,OAAuBF,GAAvB,GAG3B,IACAG,OAAM,SAAAtB,GACHC,EAASD,GACTG,GAAa,EAChB,IAAEoB,SAAQ,WACPpB,GAAa,EAChB,IACLF,EAAS,GACZ,EAWG,qBACA,SAAC,EAAD,CAAYlB,OAAQA,IACnBmB,IAAa,SAACsB,EAAA,EAAD,IACbxB,IAAS,6BAAKA,OAGtB,C,mCCtDKyB,EAAQ,gCACRC,EAAO,mCAuBPT,EAAc,CAChBU,cArBkB,kBAAMC,EAAAA,EAAAA,IAAA,UAChBH,EADgB,sCACsBC,IAC7CR,MAAK,SAAAW,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,GAFI,EAsBlBC,kBAlBsB,SAACzB,GAAD,OAAWqB,EAAAA,EAAAA,IAAA,UACzBH,EADyB,gCACOC,EADP,kBACwBnB,EADxB,YAEhCW,MAAK,SAAAW,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,GAFQ,EAmBtBE,kBAfsB,SAAC7C,GAAD,OAAQwC,EAAAA,EAAAA,IAAA,UACtBH,EADsB,iBACLrC,EADK,oBACSsC,IACtCR,MAAK,SAAAW,GAAQ,OAAIA,EAASC,IAAb,GAFQ,EAgBtBI,kBAZsB,SAAC9C,GAAD,OAAQwC,EAAAA,EAAAA,IAAA,UACtBH,EADsB,iBACLrC,EADK,4BACiBsC,IAC9CR,MAAK,SAAAW,GAAQ,OAAIA,EAASC,KAAKK,IAAlB,GAFQ,EAatBC,kBATsB,SAAChD,GAAD,OAAQwC,EAAAA,EAAAA,IAAA,UACtBH,EADsB,iBACLrC,EADK,4BACiBsC,IAC9CR,MAAK,SAAAW,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,GAFQ,GAY1B,K","sources":["components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/movies.styled.js","pages/Movies.jsx","services/fetch-trending-movie.js"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n    return (\n        <ThreeDots \nheight=\"80\" \nwidth=\"80\" \nradius=\"9\"\ncolor=\"#000000\" \nariaLabel=\"three-dots-loading\"\nwrapperStyle={{}}\nwrapperClassName=\"\"\nvisible={true}\n />\n    )\n};\n\nexport default Loader;","import styled from 'styled-components';\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\ngap: 5px;\n`;\n\nexport const Item = styled.li`\nwidth: 100px;\n`;\n","import { Link, useLocation } from \"react-router-dom\";\nimport { List, Item } from \"./MoviesList.styled\";\n\nconst MoviesList = ({ movies }) => {\n    const location = useLocation();\n    return (\n        <List>\n            {movies &&\n                movies.map(({ title, id, release_date, poster_path }) => (\n                    <Link key={id} to={`/movies/${id}`} state={{ from: location }}>\n                        <img src={`https://image.tmdb.org/t/p/w500/${poster_path}`} alt=\"poster\" width={100}/>\n                        <Item>{title} ({release_date.slice(0, -6)})</Item>\n                        </Link>\n                    ))}\n        </List>\n        );\n   \n};\n\nexport default MoviesList;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\npadding: 16px;\n`;\n","import { useState } from \"react\";\nimport { useSearchParams } from 'react-router-dom';\nimport apiTheMovie from \"../services/fetch-trending-movie\";\nimport MoviesList from \"components/MoviesList/MoviesList\";\nimport Loader from \"components/Loader/Loader\";\nimport { Wrapper } from \"./movies.styled\";\n\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get(\"query\") ?? \"\";\n;\n\n//     useEffect(() => {\n       \n//    })\n\n    const handleFormSubmit = (evt) => {\n\n        evt.preventDefault();\n         apiTheMovie.fetchSearchMovies(query)\n            .then(newMovies => {\n                if (newMovies.length === 0) {\n                    setError(\"We don't have any reviews for this movie\");\n                } else {\n                    setMovies(prevMovies => [...prevMovies, ...newMovies]);\n                    // setMovies(newMovies);\n                }\n            })\n            .catch(error => {\n                setError(error);\n                setIsLoading(false);\n            }).finally(() => {\n                setIsLoading(false)\n            })\n        setError(\"\");\n    };   \n    \n    const handleInput = (evt) => {\n    const nextParams = evt.target.value !== \"\" ? { query: evt.target.value } : {};\n    setSearchParams(nextParams);\n    }\n\n    return (<Wrapper>\n        <input type=\"text\"\n            value={query}\n            onChange={handleInput} />\n        <button type=\"submit\" onClick={handleFormSubmit}>Search</button>\n        <MoviesList movies={movies}  />\n        {isLoading && <Loader />}\n        {error && <p> {error}</p>}\n    </Wrapper>\n    )\n};\n\nexport default Movies;\n\n","import axios from 'axios';\n\nconst BASE_URL = `https://api.themoviedb.org/3/`;\nconst API_KEY = `1633536a0456347d61753bdcd242ef29`;\n\n \nconst fetchTrending = () => axios\n    .get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.data.results);\n\nconst fetchSearchMovies = (query) => axios\n    .get(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1`)\n    .then(response => response.data.results);\n\nconst fetchMovieDetails = (id) => axios\n    .get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`)\n    .then(response => response.data);\n    \nconst fetchMovieCredits = (id) => axios\n    .get(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`)\n    .then(response => response.data.cast);    \n\nconst fetchMovieReviews = (id) => axios\n    .get(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`)\n    .then(response => response.data.results);\n\nconst apiTheMovie = {\n    fetchTrending,\n    fetchSearchMovies,\n    fetchMovieDetails,\n    fetchMovieCredits,\n    fetchMovieReviews\n};\n\nexport default apiTheMovie;"],"names":["height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","List","styled","Item","movies","location","useLocation","map","title","id","release_date","poster_path","to","state","from","src","alt","slice","Wrapper","useState","setMovies","error","setError","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","query","get","type","value","onChange","evt","nextParams","target","onClick","preventDefault","apiTheMovie","then","newMovies","length","prevMovies","catch","finally","Loader","BASE_URL","API_KEY","fetchTrending","axios","response","data","results","fetchSearchMovies","fetchMovieDetails","fetchMovieCredits","cast","fetchMovieReviews"],"sourceRoot":""}